#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2018/1/29 下午8:17
# @Author  : wudizhangzhi

from six import PY3
import time
import curses

from logging import getLogger

from views.BaseMenu import BaseMenu, bind_event

log = getLogger(__name__)

HELPER_LINES = [
    'j         Down           下移',
    'k         Up             上移',
    'space     Enter          进入',
    'q         Quit           退出',
    'Ctrl-C           退出文字直播',
]


class DuokanMenu(BaseMenu):
    def __init__(self, engine, title=None, body_title=None, addition_title=None):
        super(DuokanMenu, self).__init__(title, body_title, addition_title)
        self.engine = engine
        self.page_no = 1000

        self.title = '多看阅读 Proudly presented by JRs.'
        self.body_title = '书名:'
        self.addition_title = '帮助信息:'
        self.addition_items = HELPER_LINES
        self.content_data = None  # 内容

    def draw(self):
        """
        draw screen
        """
        self.clear_screen()
        rows = 0  # 行数
        if self.title is not None:
            self.addstr(rows, 2, self.title, curses.color_pair(5))
            rows += 2

        if self.addition_title:
            self.addstr(rows, 2, self.addition_title, curses.color_pair(6))
            rows += 1
            addition_start_row = rows
            for index, item in enumerate(self.addition_items):
                self.addstr(addition_start_row + index, 4, item)
                rows += 1
            rows += 1

        if self.body_title is not None:
            self.addstr(rows, 2, self.body_title, curses.A_BOLD)
            rows += 2

        # 每次重新获取屏幕的大小, 获取范围
        screen_rows, screen_cols = self.screen.getmaxyx()
        row_max = screen_rows - rows - 1
        show_end = self.current_option + 1 if self.current_option >= row_max else row_max
        show_start = show_end - row_max if show_end > row_max else 0

        height, width = self.screen.getmaxyx()
        for char, pos in self.convert2screen(self.content_data, width, height):
            self.addstr(rows + pos[0], pos[1], char, self.normal)
        # arrow = ' ->  '
        # for index, item in enumerate(self.items[show_start:show_end]):
        #     if self.current_option == index + show_start:
        #         text_style = self.highlight
        #         self.addstr(rows + index, 4, arrow + str(item), text_style)
        #     else:
        #         text_style = self.normal
        #         self.addstr(rows + index, 4, ' ' * len(arrow) + str(item), text_style)
        self.screen.refresh()

    @bind_event([' ', curses.KEY_ENTER])
    def enter(self):
        # TODO delete
        chapters = [{
            "page_range": [
                1,
                1
            ],
            "number": 1,
            "cid": "f06797d5-0377-4c96-ab6d-a70375481e7b"
        },
            {
                "page_range": [
                    2,
                    2
                ],
                "number": 2,
                "cid": "8eb5c675-fda8-4283-a47c-71edc58b0976"
            },
            {
                "page_range": [
                    3,
                    3
                ],
                "number": 3,
                "cid": "0939216f-e6bc-4051-9d2b-50db2f26e740"
            }, ]
        current_chapter = chapters[self.current_option]
        # 获取当前章节的内容
        ret = self.engine.fetchPageContent('b64829f41e6d11e2ad8a00163e0123ac', self.page_no)
        # 替换内容
        self.items = [ret]
        self.page_no += 1

    @bind_event(['n', curses.KEY_RIGHT])
    def nextPage(self):
        """
        下一页
        Returns:

        """
        self.page_no += 1
        self.content_data = self.engine.fetchPageContent(self.engine.current_book_id, self.page_no)
        self.draw()

    @bind_event(['p', curses.KEY_LEFT])
    def perviousPage(self):
        """
        上一页
        Returns:

        """
        self.page_no -= 1
        self.content_data = self.engine.fetchPageContent(self.engine.current_book_id, self.page_no)
        self.draw()

    def convert2screen(self, pos_data, width, height):
        """将多看的位置显示转化为当前屏幕的位置显示
        当前屏幕：y, x = 33, 158
        对象:
            堆 [5, 26, 96, 5640]
        Args:
            pos_data: 
            width: 
            height: 

        Returns:

        """
        y_list = [i[1][1] for i in pos_data]
        x_list = [i[1][2] for i in pos_data]
        min_y, max_y = min(y_list), max(y_list)
        min_x, max_x = min(x_list), max(x_list)

        converted = []
        addition_lines = 0
        for char, pos in pos_data:
            _, y, x, _ = pos

            y -= min_y
            x -= min_x

            x = x % width
            addition_lines += x // width

            converted.append((char, (y + addition_lines, x)))

        return converted

if __name__ == "__main__":
    book_id = 'b64829f41e6d11e2ad8a00163e0123ac'
    test_pos_data = [('一', [5, 21, 87, 4658]), ('名', [5, 21, 88, 4661]), ('嫌', [5, 21, 89, 4664]), ('疑', [5, 21, 90, 4667]), ('人', [5, 21, 91, 4670]), ('致', [5, 21, 92, 4673]), ('残', [5, 21, 93, 4676]), ('，', [5, 21, 94, 4679]), ('因', [5, 21, 95, 4682]), ('此', [5, 21, 96, 4685]), ('，', [5, 21, 97, 4688]), ('他', [5, 21, 98, 4691]), ('就', [5, 21, 99, 4694]), ('被', [5, 21, 100, 4697]), ('停', [5, 21, 101, 4700]), ('职', [5, 21, 102, 4703]), ('了', [5, 21, 103, 4706]), ('…', [5, 21, 104, 4709]), ('…', [5, 21, 105, 4712]), ('”', [5, 21, 106, 4715]), ('“', [5, 22, 0, 4756]), ('这', [5, 22, 1, 4759]), ('种', [5, 22, 2, 4762]), ('人', [5, 22, 3, 4765]), ('，', [5, 22, 4, 4768]), ('怎', [5, 22, 5, 4771]), ('么', [5, 22, 6, 4774]), ('能', [5, 22, 7, 4777]), ('让', [5, 22, 8, 4780]), ('他', [5, 22, 9, 4783]), ('进', [5, 22, 10, 4786]), ('作', [5, 22, 11, 4789]), ('战', [5, 22, 12, 4792]), ('中', [5, 22, 13, 4795]), ('心', [5, 22, 14, 4798]), ('？', [5, 22, 15, 4801]), ('”', [5, 22, 16, 4804]), ('“', [5, 23, 0, 4845]), ('首', [5, 23, 1, 4848]), ('长', [5, 23, 2, 4851]), ('点', [5, 23, 3, 4854]), ('名', [5, 23, 4, 4857]), ('要', [5, 23, 5, 4860]), ('他', [5, 23, 6, 4863]), ('，', [5, 23, 7, 4866]), ('应', [5, 23, 8, 4869]), ('该', [5, 23, 9, 4872]), ('有', [5, 23, 10, 4875]), ('什', [5, 23, 11, 4878]), ('么', [5, 23, 12, 4881]), ('过', [5, 23, 13, 4884]), ('人', [5, 23, 14, 4887]), ('之', [5, 23, 15, 4890]), ('处', [5, 23, 16, 4893]), ('吧', [5, 23, 17, 4896]), ('。', [5, 23, 18, 4899]), ('不', [5, 23, 19, 4902]), ('过', [5, 23, 20, 4905]), ('，', [5, 23, 21, 4908]), ('对', [5, 23, 22, 4911]), ('他', [5, 23, 23, 4914]), ('限', [5, 23, 24, 4917]), ('制', [5, 23, 25, 4920]), ('挺', [5, 23, 26, 4923]), ('严', [5, 23, 27, 4926]), ('，', [5, 23, 28, 4929]), ('除', [5, 23, 29, 4932]), ('了', [5, 23, 30, 4935]), ('公', [5, 23, 31, 4938]), ('安', [5, 23, 32, 4941]), ('方', [5, 23, 33, 4944]), ('面', [5, 23, 34, 4947]), ('的', [5, 23, 35, 4950]), ('事', [5, 23, 36, 4953]), ('务', [5, 23, 37, 4956]), ('，', [5, 23, 38, 4959]), ('几', [5, 23, 39, 4962]), ('乎', [5, 23, 40, 4965]), ('什', [5, 23, 41, 4968]), ('么', [5, 23, 42, 4971]), ('都', [5, 23, 43, 4974]), ('不', [5, 23, 44, 4977]), ('让', [5, 23, 45, 4980]), ('他', [5, 23, 46, 4983]), ('知', [5, 23, 47, 4986]), ('道', [5, 23, 48, 4989]), ('。', [5, 23, 49, 4992]), ('”', [5, 23, 50, 4995]), ('作', [5, 24, 0, 5036]), ('战', [5, 24, 1, 5039]), ('中', [5, 24, 2, 5042]), ('心', [5, 24, 3, 5045]), ('？', [5, 24, 4, 5048]), ('那', [5, 24, 5, 5051]), ('是', [5, 24, 6, 5054]), ('什', [5, 24, 7, 5057]), ('么', [5, 24, 8, 5060]), ('？', [5, 24, 9, 5063]), ('汪', [5, 24, 10, 5066]), ('淼', [5, 24, 11, 5069]), ('不', [5, 24, 12, 5072]), ('解', [5, 24, 13, 5075]), ('地', [5, 24, 14, 5078]), ('看', [5, 24, 15, 5081]), ('着', [5, 24, 16, 5084]), ('面', [5, 24, 17, 5087]), ('前', [5, 24, 18, 5090]), ('的', [5, 24, 19, 5093]), ('两', [5, 24, 20, 5096]), ('位', [5, 24, 21, 5099]), ('军', [5, 24, 22, 5102]), ('官', [5, 24, 23, 5105]), ('。', [5, 24, 24, 5108]), ('接', [5, 25, 0, 5149]), ('汪', [5, 25, 1, 5152]), ('淼', [5, 25, 2, 5155]), ('的', [5, 25, 3, 5158]), ('汽', [5, 25, 4, 5161]), ('车', [5, 25, 5, 5164]), ('驶', [5, 25, 6, 5167]), ('进', [5, 25, 7, 5170]), ('了', [5, 25, 8, 5173]), ('城', [5, 25, 9, 5176]), ('市', [5, 25, 10, 5179]), ('近', [5, 25, 11, 5182]), ('郊', [5, 25, 12, 5185]), ('的', [5, 25, 13, 5188]), ('一', [5, 25, 14, 5191]), ('座', [5, 25, 15, 5194]), ('大', [5, 25, 16, 5197]), ('院', [5, 25, 17, 5200]), ('，', [5, 25, 18, 5203]), ('从', [5, 25, 19, 5206]), ('那', [5, 25, 20, 5209]), ('只', [5, 25, 21, 5212]), ('有', [5, 25, 22, 5215]), ('门', [5, 25, 23, 5218]), ('牌', [5, 25, 24, 5221]), ('号', [5, 25, 25, 5224]), ('码', [5, 25, 26, 5227]), ('但', [5, 25, 27, 5230]), ('没', [5, 25, 28, 5233]), ('有', [5, 25, 29, 5236]), ('单', [5, 25, 30, 5239]), ('位', [5, 25, 31, 5242]), ('名', [5, 25, 32, 5245]), ('的', [5, 25, 33, 5248]), ('大', [5, 25, 34, 5251]), ('门', [5, 25, 35, 5254]), ('，', [5, 25, 36, 5257]), ('汪', [5, 25, 37, 5260]), ('淼', [5, 25, 38, 5263]), ('知', [5, 25, 39, 5266]), ('道', [5, 25, 40, 5269]), ('这', [5, 25, 41, 5272]), ('里', [5, 25, 42, 5275]), ('是', [5, 25, 43, 5278]), ('军', [5, 25, 44, 5281]), ('方', [5, 25, 45, 5284]), ('而', [5, 25, 46, 5287]), ('不', [5, 25, 47, 5290]), ('是', [5, 25, 48, 5293]), ('警', [5, 25, 49, 5296]), ('方', [5, 25, 50, 5299]), ('的', [5, 25, 51, 5302]), ('地', [5, 25, 52, 5305]), ('盘', [5, 25, 53, 5308]), ('。', [5, 25, 54, 5311]), ('会', [5, 26, 0, 5352]), ('议', [5, 26, 1, 5355]), ('是', [5, 26, 2, 5358]), ('在', [5, 26, 3, 5361]), ('一', [5, 26, 4, 5364]), ('个', [5, 26, 5, 5367]), ('大', [5, 26, 6, 5370]), ('厅', [5, 26, 7, 5373]), ('里', [5, 26, 8, 5376]), ('举', [5, 26, 9, 5379]), ('行', [5, 26, 10, 5382]), ('的', [5, 26, 11, 5385]), ('，', [5, 26, 12, 5388]), ('汪', [5, 26, 13, 5391]), ('淼', [5, 26, 14, 5394]), ('一', [5, 26, 15, 5397]), ('进', [5, 26, 16, 5400]), ('去', [5, 26, 17, 5403]), ('就', [5, 26, 18, 5406]), ('对', [5, 26, 19, 5409]), ('这', [5, 26, 20, 5412]), ('里', [5, 26, 21, 5415]), ('的', [5, 26, 22, 5418]), ('纷', [5, 26, 23, 5421]), ('乱', [5, 26, 24, 5424]), ('吃', [5, 26, 25, 5427]), ('惊', [5, 26, 26, 5430]), ('不', [5, 26, 27, 5433]), ('小', [5, 26, 28, 5436]), ('。', [5, 26, 29, 5439]), ('大', [5, 26, 30, 5442]), ('厅', [5, 26, 31, 5445]), ('周', [5, 26, 32, 5448]), ('围', [5, 26, 33, 5451]), ('是', [5, 26, 34, 5454]), ('一', [5, 26, 35, 5457]), ('圈', [5, 26, 36, 5460]), ('胡', [5, 26, 37, 5463]), ('乱', [5, 26, 38, 5466]), ('安', [5, 26, 39, 5469]), ('放', [5, 26, 40, 5472]), ('的', [5, 26, 41, 5475]), ('电', [5, 26, 42, 5478]), ('脑', [5, 26, 43, 5481]), ('设', [5, 26, 44, 5484]), ('备', [5, 26, 45, 5487]), ('，', [5, 26, 46, 5490]), ('有', [5, 26, 47, 5493]), ('的', [5, 26, 48, 5496]), ('桌', [5, 26, 49, 5499]), ('子', [5, 26, 50, 5502]), ('上', [5, 26, 51, 5505]), ('放', [5, 26, 52, 5508]), ('不', [5, 26, 53, 5511]), ('下', [5, 26, 54, 5514]), ('就', [5, 26, 55, 5517]), ('直', [5, 26, 56, 5520]), ('接', [5, 26, 57, 5523]), ('搁', [5, 26, 58, 5526]), ('地', [5, 26, 59, 5529]), ('板', [5, 26, 60, 5532]), ('上', [5, 26, 61, 5535]), ('，', [5, 26, 62, 5538]), ('电', [5, 26, 63, 5541]), ('线', [5, 26, 64, 5544]), ('和', [5, 26, 65, 5547]), ('网', [5, 26, 66, 5550]), ('线', [5, 26, 67, 5553]), ('纠', [5, 26, 68, 5556]), ('缠', [5, 26, 69, 5559]), ('着', [5, 26, 70, 5562]), ('散', [5, 26, 71, 5565]), ('在', [5, 26, 72, 5568]), ('地', [5, 26, 73, 5571]), ('上', [5, 26, 74, 5574]), ('；', [5, 26, 75, 5577]), ('一', [5, 26, 76, 5580]), ('大', [5, 26, 77, 5583]), ('摞', [5, 26, 78, 5586]), ('网', [5, 26, 79, 5589]), ('络', [5, 26, 80, 5592]), ('交', [5, 26, 81, 5595]), ('换', [5, 26, 82, 5598]), ('机', [5, 26, 83, 5601]), ('没', [5, 26, 84, 5604]), ('有', [5, 26, 85, 5607]), ('安', [5, 26, 86, 5610]), ('在', [5, 26, 87, 5613]), ('机', [5, 26, 88, 5616]), ('架', [5, 26, 89, 5619]), ('内', [5, 26, 90, 5622]), ('，', [5, 26, 91, 5625]), ('而', [5, 26, 92, 5628]), ('是', [5, 26, 93, 5631]), ('随', [5, 26, 94, 5634]), ('手', [5, 26, 95, 5637]), ('堆', [5, 26, 96, 5640]), ('放', [5, 26, 97, 5643]), ('在', [5, 26, 98, 5646]), ('服', [5, 26, 99, 5649]), ('务', [5, 26, 100, 5652]), ('器', [5, 26, 101, 5655]), ('上', [5, 26, 102, 5658]), ('；', [5, 26, 103, 5661]), ('有', [5, 26, 104, 5664]), ('好', [5, 26, 105, 5667]), ('几', [5, 26, 106, 5670]), ('个', [5, 26, 107, 5673])]


    # cookie = load_cookie('cookie.txt')
    # duokan = DuoKan(cookie)
    menu = DuokanMenu(None)
    # menu.draw()
    # converted = menu.convert2screen(test_pos_data, 158, 33)
    # for c in converted:
    #     char, pos = c
    #     menu.addstr(pos[0], pos[1], char, menu.normal)
    menu.content_data = test_pos_data
    menu.draw()
    menu.listen()
